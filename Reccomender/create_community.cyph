create (:Community {name: 'Database'})
create (:Community {name: "IOT"})
create (:Community {name: "Internet security"})
create (:Community {name: "Bioinformatics"})
create (:Community {name: "Quantum computing"})
create (:Community {name: "Machine Learning"});

create index on :Community(name);

match (k:Keyword)
where k.name in ['Big data', 'Databases', 'Data modeling', 'Data storage', 'Semantic data']
with k
match (c:Community {name: 'Database'})
create (k)-[:belongs_to]->(c);

match (k:Keyword)
where k.name in ['IOT', 'Sensors', 'Real time', 'Streams', 'Connection']
with k
match (c:Community {name: 'IOT'})
create (k)-[:belongs_to]->(c);

match (k:Keyword)
where k.name in ['Cybersecurity', 'Protocols', 'Tokens', 'Authentication', 'Encryption']
with k
match (c:Community {name: 'Internet security'})
create (k)-[:belongs_to]->(c);

match (k:Keyword)
where k.name in ['Bioinformatics', 'Genetic programming', 'Biology', 'DNA', 'Cancer']
with k
match (c:Community {name: 'Bioinformatics'})
create (k)-[:belongs_to]->(c);

match (k:Keyword)
where k.name in ['Quantum', 'Physics', 'QBit', 'Combinatorics', 'Entanglement']
with k
match (c:Community {name: 'Quantum computing'})
create (k)-[:belongs_to]->(c);

match (k:Keyword)
where k.name in ['AI', 'Machine Learning', 'Classification', 'Deep Learning', 'Clustering']
with k
match (c:Community {name: 'Machine Learning'})
create (k)-[:belongs_to]->(c);